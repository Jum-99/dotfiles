# autocompletion plugin deoplete.nvim
[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = ['nvim-yarp', 'vim-hug-neovim-rpc']
on_event = ['InsertEnter']
hook_source = '''
let g:deoplete#enable_at_startup=1
call deoplete#custom#option({
\ 'auto_complete_delay': 100,
\ 'ignore_case': v:false,
\ 'max_list': 100,
\ 'refresh_always': v:false,
\ 'smart_case': v:true,
\ 'yarp': v:true,
\ })
inoremap <expr><tab> pumvisible() ? "\<C-n>" : "\<tab>"
imap <expr><CR>
\ (pumvisible() && neosnippet#expandable_or_jumpable()) ?
\   "\<Plug>(neosnippet_expand)" : "<C-r>=<SID>my_cr_function()<CR>"
function! s:my_cr_function() abort
  return deoplete#close_popup() . "\<CR>"
endfunction
"au InitAutoCmd InsertLeave,CompleteDone * if pumvisible() == 0 | silent! pclose() | endif
set completeopt-=preview
'''

# deoplete requirements
[[plugins]]
repo = 'roxma/nvim-yarp'

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'

# completion using syntax
[[plugins]]
repo = 'Shougo/neco-syntax'
on_event = ['InsertEnter']

# snippet preset plugin neosnippet.vim
[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['neosnippet-snippets', 'context_filetype.vim']
on_event = ['InsertEnter']
hook_source = '''
" Plugin key-mappings.
" Note: It must be "imap" and "smap". It uses <Plug> mappings.
imap <C-k> <Plug>(neosnippet_expand_or_jump)
smap <C-k> <Plug>(neosnippet_expand_or_jump)
xmap <C-k> <Plug>(neosnippet_expand_target)

" SuperTab like snippets behavior.
" Note: It must be 'imap' and 'smap'. It uses <Plug> mappings.
"imap <expr><TAB>
"\ pumvisible() ? "\<C-n>" :
"\ neosnippet#expandable_or_jumpable() ?
"\   "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

"imap <expr><CR>
"\ (pumvisible() && neosnippet#expandable_or_jumpable()) ? "\<Plug>(neosnippet_expand_or_jump)" : "\<CR>"

"smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
"\ "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

" For conceal markers.
if has('conceal')
  set conceallevel=2 concealcursor=niv
endif
'''

# snippet presets
[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'Shougo/context_filetype.vim'

# resize window
[[plugins]]
repo = 'simeji/winresizer'
on_event = ['WinNew']
hook_source = '''
let g:winresizer_vert_resize = 1
let g:winresizer_horiz_resize = 1
'''

# html tag completion
[[plugins]]
repo = 'alvan/vim-closetag'
on_ft = ['html', 'javascript', 'typescript.tsx']
hook_source = '''
let g:closetag_filenames = '*.html,*.jsx,*.js,*.tsx'
let g:closetag_xhtml_filenames = '*.jsx,*.js,*.tsx'
'''

[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['html', 'javascript', 'typescript', 'css']

# js setting
[[plugins]]
repo = 'pangloss/vim-javascript'
on_ft = ['html', 'javascript']

[[plugins]]
repo = 'othree/yajs.vim'
on_ft = ['javascript']

[[plugins]]
repo = 'MaxMEllon/vim-jsx-pretty'
on_ft = ['javascript', 'typescript']

[[plugins]]
repo = 'othree/es.next.syntax.vim'
on_ft = ['javascript']

[[plugins]]
repo = 'othree/javascript-libraries-syntax.vim'
on_ft = ['javascript']
hook_source = '''
let g:used_javascript_libs = 'jquery,react'
let b:javascript_lib_use_jquery = 1
let b:javascript_lib_use_react = 1
'''

# js autocompletion
[[plugins]]
repo = 'ternjs/tern_for_vim'
on_ft = ['javascript']
build = 'npm install'

# ts setting
[[plugins]]
repo = 'leafgarland/typescript-vim'
on_ft = ['typescript']

# html highlight
[[plugins]]
repo = 'othree/html5.vim'
on_ft = ['html']

# css highlight
[[plugins]]
repo = 'hail2u/vim-css3-syntax'
on_ft = ['html', 'css', 'javascript']

# latex setting
[[plugins]]
repo = 'lervag/vimtex'
on_ft = ['tex']
